# name: weather data pipeline

# on:
#   schedule:
#     - cron: '15 22 * * *'  # 12:15 AM UTC+2
#     - cron: '15 10 * * *'   # 12:15 pm UTC+2
#     - cron: '15 19 * * *'  # 9:15 PM UTC+2
#   workflow_dispatch:

# jobs:
#   autorun:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repo content
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.9"
#           cache: "pip"

#       - name: Cache pip dependencies
#         uses: actions/cache@v3
#         with:
#           path: ~/.cache/pip
#           key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#           restore-keys: |
#             ${{ runner.os }}-pip-

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Decode JSON credentials file
#         run: |
#           echo "${{ secrets.GOOGLE_CREDENTIAL }}" | base64 -d > /tmp/GOOGLE_CREDENTIAL.json

#       - name: Run Python script
#         run: |
#           python main.py
#         env:
#           GOOGLE_CREDENTIAL: /tmp/GOOGLE_CREDENTIAL.json
#           API_TOKEN: ${{ secrets.API_TOKEN }}


name: weather data pipeline

on:
  schedule:
    - cron: '15 22 * * *'  # 12:15 AM UTC+2
    - cron: '15 10 * * *'   # 12:15 PM UTC+2
    - cron: '15 19 * * *'   # 9:15 PM UTC+2
  workflow_dispatch:

jobs:
  autorun:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo content
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Decode JSON credentials file
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIAL }}" | base64 -d > /tmp/GOOGLE_CREDENTIAL.json

      - name: Run Python script
        run: |
          python main.py
        env:
          GOOGLE_CREDENTIAL: /tmp/GOOGLE_CREDENTIAL.json
          API_TOKEN: ${{ secrets.API_TOKEN }}

      - name: Set up msmtp (Gmail)
        run: |
          sudo apt-get update
          sudo apt-get install -y msmtp msmtp-mta
          
          echo "defaults" > ~/.msmtprc
          echo "account gmail" >> ~/.msmtprc
          echo "host smtp.gmail.com" >> ~/.msmtprc
          echo "port 587" >> ~/.msmtprc
          echo "from ${{ secrets.GMAIL_EMAIL }}" >> ~/.msmtprc
          echo "auth on" >> ~/.msmtprc
          echo "user ${{ secrets.GMAIL_EMAIL }}" >> ~/.msmtprc
          echo "password ${{ secrets.GMAIL_APP_PASSWORD }}" >> ~/.msmtprc
          echo "tls on" >> ~/.msmtprc
          echo "tls_starttls on" >> ~/.msmtprc
          echo "logfile ~/.msmtp.log" >> ~/.msmtprc
          chmod 600 ~/.msmtprc

      - name: Send email notification
        run: |
          echo -e "Subject: ðŸ”” Weather Data Pipeline Ran\n\nThe scheduled weather data pipeline ran successfully at $(date -u)." | msmtp ${{ secrets.EMAIL_TO }}
